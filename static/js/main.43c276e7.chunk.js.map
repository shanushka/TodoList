{"version":3,"sources":["components/InputField.js","components/TabBar.js","components/Button.js","components/Task.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["InputList","_this","this","react_default","a","createElement","className","props","value","onSubmit","evt","type","placeholder","userInput","onChange","event","handleChange","React","Component","TabBar","console","log","activeState","onClick","activeStage","Button","index","Task","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeEditedContent","setState","editedContent","target","handelEditButtonClick","newEdit","state","edit","todo","_this2","InputField","handleEdit","done","class","handleComplete","src_components_Button","handleDelete","TaskList","todos","filteredContent","filter","indexOf","searchField","list","toConsumableArray","map","src_components_Task","key","id","handleSubmit","changeInput","App","preventDefault","newTodo","Date","now","concat","handleClick","indexx","findIndex","active","changeSearch","handleSearch","storageData","window","localStorage","getItem","JSON","parse","clear","setItem","stringify","src_components_TabBar","components_TaskList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43c276e7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./InpuField.css\";\n\nclass InputList extends React.Component {\n  render() {\n    return (\n      <div className={this.props.value}>\n        <form onSubmit={evt => this.props.onSubmit(evt)}>\n          <input\n            type='text'\n            placeholder={this.props.value}\n            value={this.props.userInput}\n            onChange={event => this.props.handleChange(event)}\n          />\n          <button>{this.props.value}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default InputList;\n","import React from \"react\";\nimport \"./TabBar.css\";\nconst TabBar = props => {\n  console.log(\"ss\", props.activeState);\n\n  return (\n    <div className='Tabs'>\n      <div\n        className={\n          props.activeState === \"Home\" ? \"tablinks active\" : \"tablinks\"\n        }\n        onClick={() => props.activeStage(\"Home\")}\n      >\n        Home\n      </div>\n      <div\n        className={\n          props.activeState === \"Completed\" ? \"tablinks active\" : \"tablinks\"\n        }\n        onClick={() => props.activeStage(\"Completed\")}\n      >\n        Completed\n      </div>\n      <div\n        className={\n          props.activeState === \"Incomplete\" ? \"tablinks active\" : \"tablinks\"\n        }\n        onClick={() => props.activeStage(\"Incomplete\")}\n      >\n        Incomplete\n      </div>\n    </div>\n  );\n};\nexport default TabBar;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = props => {\n  return (\n    <button\n      className={props.value}\n      onClick={() => props.onClick(props.index)}\n    />\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport Input from \"./InputField\";\nimport \"./Task.css\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      editedContent: props.todo.value,\n      edit: false\n    };\n  }\n\n  render() {\n    if (!this.state.edit) {\n      return (\n        <div className='task clearfix'>\n          <span className={this.props.todo.done ? \"tasks complete\" : \"tasks\"}>\n            {this.props.todo.value}\n          </span>\n          <div class='buttons'>\n            <button\n              className={this.props.todo.done ? \"Undo\" : \"Complete\"}\n              onClick={() => this.props.handleComplete(this.props.index)}\n            />\n            <Button\n              value='delete'\n              onClick={this.props.handleDelete}\n              index={this.props.index}\n            />\n            <Button value='edit' onClick={this.handelEditButtonClick} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='task clearfix'>\n          <Input\n            userInput={this.state.editedContent}\n            value='Save'\n            edit={this.state.edit}\n            index={this.props.index}\n            onSubmit={event => {\n              this.props.handleEdit(\n                event,\n                this.props.index,\n                this.handelEditButtonClick,\n                this.state.editedContent\n              );\n            }}\n            handleChange={evt => {\n              this.changeEditedContent(evt);\n            }}\n          />\n        </div>\n      );\n    }\n  }\n  changeEditedContent = evt => {\n    this.setState({\n      editedContent: evt.target.value\n    });\n  };\n\n  handelEditButtonClick = () => {\n    let newEdit = !this.state.edit;\n    this.setState({\n      edit: newEdit\n    });\n  };\n}\n\nexport default Task;\n","import React from \"react\";\n\nimport Task from \"./Task\";\n\nconst TaskList = props => {\n  console.log(props.todos);\n\n  let filteredContent =\n  props.todos.filter(todo => {\n    return todo.value.indexOf(props.searchField) !== -1;\n  });\n\n  let list = null;\n  if (props.activeState == \"Completed\") {\n    list = filteredContent.filter(todo => todo.done);\n  } else if (props.activeState == \"Incomplete\") {\n    list = filteredContent.filter(todo => !todo.done);\n  } else {\n    list = [...filteredContent];\n  }\n  return (\n    <div>\n      {list.map(todo => {\n        return (\n          <Task\n            key={todo.id}\n            index={todo.id}\n            todo={todo}\n            handleSubmit={props.handleSubmit}\n            handleComplete={props.handleComplete}\n            handleDelete={props.handleDelete}\n            handleEdit={props.handleEdit}\n            changeInput={props.changeInput}\n            userInput={props.userInput}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { Component } from \"react\";\n\nimport Input from \"./components/InputField\";\nimport Tab from \"./components/TabBar\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\nimport { networkInterfaces } from \"os\";\nclass App extends Component {\n  constructor() {\n    super();\n    const storageData = window.localStorage.getItem(\"todoData\");\n    const todos = storageData ? JSON.parse(storageData) : [];\n\n    this.state = {\n      searchField: \"\",\n      active: \"Home\",\n      userInput: \"\",\n      todos: todos\n    };\n  }\n\n  changeInput = event => {\n    this.setState({\n      userInput: event.target.value\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const newTodo = {\n      id: Date.now(),\n      value: this.state.userInput,\n      done: false\n    };\n    const todos = [...this.state.todos, newTodo];\n    this.setState({\n      todos,\n      userInput: \"\"\n    });\n  };\n\n  handleEdit = (evt, index, handleClick, editedContent) => {\n    evt.preventDefault();\n    var todos = [...this.state.todos];\n    var indexx = todos.findIndex(todo => todo.id === index);\n    todos[indexx].value = editedContent;\n    todos[indexx].done = this.state.todos[indexx].done;\n    this.setState({ todos });\n    handleClick();\n  };\n  handleDelete = index => {\n    let todos = this.state.todos.filter(todo => {\n      return todo.id !== index;\n    });\n    this.setState({ todos });\n  };\n\n  handleComplete = index => {\n    const todos = this.state.todos;\n    var indexx = todos.findIndex(todo => todo.id === index);\n    todos[indexx].done = !todos[indexx].done;\n    this.setState({ todos });\n  };\n\n  activeStage = active => {\n    this.setState({\n      active\n    });\n  };\n  changeSearch = evt => {\n    this.setState({\n      searchField: evt.target.value\n    });\n  };\n  handleSearch = evt => {\n    evt.preventDefault();\n    this.setState({\n      searchField: \"\"\n    });\n  };\n  render() {\n    window.localStorage.clear();\n    window.localStorage.setItem(\"todoData\", JSON.stringify(this.state.todos));\n\n    return (\n      <div className='App clearfix'>\n        <div className='header clearfix'>\n          <h1>Todolist</h1>\n          <Input\n            value='search'\n            userInput={this.state.searchField}\n            onSubmit={this.handleSearch}\n            handleChange={this.changeSearch}\n          />\n        </div>\n\n        <Input\n          handleChange={this.changeInput}\n          userInput={this.state.userInput}\n          onSubmit={this.handleSubmit}\n          value='Add'\n        />\n        <Tab activeStage={this.activeStage} activeState={this.state.active} />\n\n        <TaskList\n          searchField={this.state.searchField}\n          activeState={this.state.active}\n          todos={this.state.todos}\n          handleSubmit={this.handleSubmit}\n          userInput={this.state.userInput}\n          handleComplete={this.handleComplete}\n          handleDelete={this.handleDelete}\n          handleEdit={this.handleEdit}\n          changeInput={this.changeInput}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}